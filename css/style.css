/*Your Code Here*/

/*Write selector/rule property to add your border when
links in the navigation are in the hover or focus state.*/

nav a:hover {
  border: 2px dotted purple;
}
nav a:focus {
  border: 2px dotted purple;
}

/*Write selector/rule property to position the default position for the skip class element*/
.skip a {
  position: absolute;
  top: -65px;
}


/*Write selector/rule property to position the skip class element when it is in focus*/

.skip a:focus {
     top: 25px;
}

/*Write selector/rule property to style all elements when in focus*/

:focus {
     border: 5px dashed green;
}


/*Write selector/rule property to style the container */
.container {
     display: grid;
     grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
     grid-gap: 13px;
}

/*Write selector/rule property to add the background image to the first div in the grid and place it in the grid. */
.container > :first-child {
     grid-column: 1 / -1; /* I chose to do it this way instead of span to 5 so I dont have to redo this for the desktop since the grid for that is 7 columns */
     background-image: url('../images/header.jpg'); /*I asked for help with this from UofM GPT because I kept getting a gray background instead of the image*/
}

/* Steps 6 and 7: Write the selector/rule properties to  place the next five elements in the next
 five rows in the grid. */

       /*This will be a lot of rules.... but be strategic and combine selectors*/

.accounts, .onlinebanking, .security, .loans, .contact {
     grid-column: 2 / span 3;
}

.accounts-image, .onlinebanking-image, .security-image, .loans-image, .contact-image {
     grid-column: 1 / -1;
     max-height: 675px;
     overflow: hidden;
}

.accounts-image img, .onlinebanking-image img, .security-image img, .loans-image img, .contact-image img {
     width: 100%;
     height: 100%;
     object-fit: cover;
     display: block;
}

.accounts, .accounts-image {
     grid-row: 2;
}
.onlinebanking, .onlinebanking-image {
     grid-row: 3;
}
.security, .security-image {
     grid-row: 4;
}
.loans, .loans-image {
     grid-row: 5;
}
.contact, .contact-image {
     grid-row: 6;
}

 /* Step 8: Write the selector/rule property to style the .text-block class. */

.text-block {
  justify-self: center;
  align-self: center;
  text-align: center;
}

.text-block ul {
     text-align: left;
}


/* Add your media query here */
@media (min-width: 825px) {

  /* Step 10: Write the selector/rule property to style the nav element */
     header nav {
          padding: 35px 0;
     }
     header nav ul {
          text-align: right;
     }
     header nav li {
          display: inline-block;
     }

  /* Step 11: Write the selector/rule property to update the .container class */
     .container {
     grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
     }

  /* Steps 12 - 15: Update the grid-column property of the grid's children (where-needed)*/
     .accounts, .security, .contact {
          grid-column: 4 / span 3;
     }
     .accounts-image, .security-image, .contact-image {
          grid-column: 1 / span 5;
     }
     .onlinebanking-image, .loans-image{
          grid-column: 3 / span 5;
     }

 /* Step 16:Write the selector/rule property to update the .text-block class */
     .text-block {
          max-height: 235px;
          overflow: auto;
     }
}